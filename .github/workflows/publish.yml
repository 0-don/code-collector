name: Publish Extension

on:
  workflow_dispatch:
  push:
    branches: [master]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check version change
        id: check
        run: |
          OLD_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
          NEW_VERSION=$(jq -r '.version' package.json)
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - run: npm ci
      - run: npm run package

      - name: Publish to marketplace
        run: npx @vscode/vsce publish -p ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.new-version }}
          release_name: v${{ needs.check-version.outputs.new-version }}
          body: "Release v${{ needs.check-version.outputs.new-version }}"
          draft: false
          prerelease: false
